Metadata:
Import from fhttps://opengamedata.fielddaylab.wisc.edu/data/CRYSTAL/CRYSTAL_20191201_to_20191231_de09c18_proc.zip
Import from fhttps://opengamedata.fielddaylab.wisc.edu/data/CRYSTAL/CRYSTAL_20200101_to_20200131_de09c18_proc.zip
*arg* filter_args = {'query_list': ['sessionDurationInSecs < 2700', 'lvl0_durationInSecs > 0', '((lvl0_finalScore != lvl0_finalScore) | (lvl0_completesCount != lvl0_completesCount) | ~((lvl0_finalScore == 0) & (lvl0_completesCount > 0)))', '((lvl1_finalScore != lvl1_finalScore) | (lvl1_completesCount != lvl1_completesCount) | ~((lvl1_finalScore == 0) & (lvl1_completesCount > 0)))', '((lvl2_finalScore != lvl2_finalScore) | (lvl2_completesCount != lvl2_completesCount) | ~((lvl2_finalScore == 0) & (lvl2_completesCount > 0)))', '((lvl3_finalScore != lvl3_finalScore) | (lvl3_completesCount != lvl3_completesCount) | ~((lvl3_finalScore == 0) & (lvl3_completesCount > 0)))', '((lvl4_finalScore != lvl4_finalScore) | (lvl4_completesCount != lvl4_completesCount) | ~((lvl4_finalScore == 0) & (lvl4_completesCount > 0)))', '((lvl5_finalScore != lvl5_finalScore) | (lvl5_completesCount != lvl5_completesCount) | ~((lvl5_finalScore == 0) & (lvl5_completesCount > 0)))', '((lvl6_finalScore != lvl6_finalScore) | (lvl6_completesCount != lvl6_completesCount) | ~((lvl6_finalScore == 0) & (lvl6_completesCount > 0)))', '((lvl7_finalScore != lvl7_finalScore) | (lvl7_completesCount != lvl7_completesCount) | ~((lvl7_finalScore == 0) & (lvl7_completesCount > 0)))', '((lvl8_finalScore != lvl8_finalScore) | (lvl8_completesCount != lvl8_completesCount) | ~((lvl8_finalScore == 0) & (lvl8_completesCount > 0)))'], 'one_query': False, 'fillna': 0, 'verbose': False}
Query: Intial Shape, output_shape: (9513, 114)
Query: sessionDurationInSecs < 2700, output_shape: (9299, 114)
Query: lvl0_durationInSecs > 0, output_shape: (6868, 114)
Query: ((lvl0_finalScore != lvl0_finalScore) | (lvl0_completesCount != lvl0_completesCount) | ~((lvl0_finalScore == 0) & (lvl0_completesCount > 0))), output_shape: (6007, 114)
Query: ((lvl1_finalScore != lvl1_finalScore) | (lvl1_completesCount != lvl1_completesCount) | ~((lvl1_finalScore == 0) & (lvl1_completesCount > 0))), output_shape: (5980, 114)
Query: ((lvl2_finalScore != lvl2_finalScore) | (lvl2_completesCount != lvl2_completesCount) | ~((lvl2_finalScore == 0) & (lvl2_completesCount > 0))), output_shape: (5944, 114)
Query: ((lvl3_finalScore != lvl3_finalScore) | (lvl3_completesCount != lvl3_completesCount) | ~((lvl3_finalScore == 0) & (lvl3_completesCount > 0))), output_shape: (5922, 114)
Query: ((lvl4_finalScore != lvl4_finalScore) | (lvl4_completesCount != lvl4_completesCount) | ~((lvl4_finalScore == 0) & (lvl4_completesCount > 0))), output_shape: (5871, 114)
Query: ((lvl5_finalScore != lvl5_finalScore) | (lvl5_completesCount != lvl5_completesCount) | ~((lvl5_finalScore == 0) & (lvl5_completesCount > 0))), output_shape: (5854, 114)
Query: ((lvl6_finalScore != lvl6_finalScore) | (lvl6_completesCount != lvl6_completesCount) | ~((lvl6_finalScore == 0) & (lvl6_completesCount > 0))), output_shape: (5854, 114)
Query: ((lvl7_finalScore != lvl7_finalScore) | (lvl7_completesCount != lvl7_completesCount) | ~((lvl7_finalScore == 0) & (lvl7_completesCount > 0))), output_shape: (5854, 114)
Query: ((lvl8_finalScore != lvl8_finalScore) | (lvl8_completesCount != lvl8_completesCount) | ~((lvl8_finalScore == 0) & (lvl8_completesCount > 0))), output_shape: (5796, 114)
Filled NaN with 0
*arg* new_feat_args = {'verbose': False}
*arg* lvlfeats = ['completesCount', 'finalScore']
*arg* lvlrange = range(0, 9)
*arg* finalfeats = ['sessionDurationInSecs', 'sum_lvl_0_to_8_completesCount', 'sum_lvl_0_to_8_finalScore']
Original Num Rows: 5796
*arg* zthresh = None
LogTransform using np.long1p
Scaled with scikitlearn RobustScaler(copy=True, quantile_range=(25.0, 75.0), with_centering=True,
             with_scaling=True)
PCA df calculated with scikitlearn PCA(copy=True, iterated_power='auto', n_components=2, random_state=None,
    svd_solver='auto', tol=0.0, whiten=False)
Cluster on PCA dims
Labels calculated via clusterer: KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300,
       n_clusters=4, n_init=10, n_jobs=None, precompute_distances='auto',
       random_state=None, tol=0.0001, verbose=0)