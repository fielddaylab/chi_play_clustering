{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Test workflow","provenance":[{"file_id":"1MDnrWPCH-I8jewUEvZMvBbvDqu4f0IaA","timestamp":1581013907700},{"file_id":"1TIROFkCer2kKwzc9tktzRiemUpRtxfE1","timestamp":1580839638393},{"file_id":"1KBXgYxmB4QzD-nWvWoz4gxxRfwf0KdRz","timestamp":1580495724290}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"cells":[{"cell_type":"code","metadata":{"id":"H8RYBJJdH3cW","colab_type":"code","cellView":"both","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"9e52d5ce-e35f-4444-a5fc-3df04423ae21","executionInfo":{"status":"ok","timestamp":1582910597063,"user_tz":360,"elapsed":284,"user":{"displayName":"John Mccloskey","photoUrl":"","userId":"09367906756780102030"}}},"source":["\n","#@markdown ###First Cell \n","#@markdown *Please paste this cell into any colab notebook for this project.* <br>\n","#@markdown ***\n","#@markdown **Contents**: Contents. <br>\n","#@markdown ***\n","#@markdown Major Edit History: \n","#@markdown - Author, Date: Created as copy of Old Notebook (`Old Title`).\n","#@markdown ***\n","#@markdown <br> \n","#@markdown Please change `FIELDDAY_DIR` if it is located differently in your drive. This cell will error if `FIELDDAY_DIR` is incorrect.\n","# mount drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# Change working directory\n","import os\n","FIELDDAY_DIR = '/content/drive/My Drive/Field Day' #@param {type:\"string\"}\n","JUPYTER_DIR = os.path.join(FIELDDAY_DIR,'Research and Writing Projects/2020 CHI Play - Lakeland Clustering/Jupyter')\n","os.chdir(JUPYTER_DIR)\n","print(f'---\\nCWD: {os.getcwd()}')\n","\n","#@markdown Change pandas `max_rows` and `max_columns`\n","import pandas as pd\n","pd.options.display.max_columns = 100 #@param {type:\"integer\"}\n","pd.options.display.max_rows = 60 #@param {type:\"integer\"}\n","\n","#@markdown *Note: There may be other variables to manually change. Look the \"Set Variables\" section.*\n","\n","# import utils\n","import sys\n","sys.path.append('.')\n","import utils"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","---\n","CWD: /content/drive/My Drive/Field Day/Research and Writing Projects/2020 CHI Play - Lakeland Clustering/Jupyter\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lSA58Do90Krl","colab_type":"code","colab":{}},"source":["from sklearn.decomposition import PCA\n","from sklearn.manifold import TSNE\n","from sklearn.cluster import KMeans,DBSCAN\n","from sklearn.preprocessing import StandardScaler, RobustScaler, PowerTransformer, Normalizer\n","from sklearn.pipeline import make_pipeline\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","from math import pi\n","\n","def df_np_df(func):\n","    def convert_call_reconvert_df(self, df, *args, **kwargs):\n","        nparray = df.to_numpy()\n","        nparray, meta = func(self, nparray, *args, **kwargs)\n","        assert nparray.shape[1] == len(df.columns)\n","        return pd.DataFrame(nparray, columns=df.columns), meta\n","    return convert_call_reconvert_df\n","\n","\n","\n","class Workflow:\n","# fields\n","    DEF_SCALE = \"robust\"\n","  \n","    def __init__(self, savename = None, graph_dir = None):\n","        self.meta = []\n","        self.savename = savename\n","        self.graph_path = graph_dir\n","        \n","        # flags\n","        self.verbose: False\n","            \n","        # steps\n","        self.pre_histogram = True\n","        self.do_exclude_outliers = True\n","        self.do_scaling = True\n","        self.do_normalization = True\n","        self.post_histogram = True\n","        self.do_PCA = True \n","        self.plot_scree = True\n","        self.do_clustering = True\n","        self.plot_silhouettes = True\n","\n","        # scikitlearn\n","        self.outlier_method = None\n","        self.scaling_method = 'Robust'\n","        self.normalization_method = 'Normalizer'\n","        self.pca_dimension_count = 5\n","        self.clustering_method = \"KMeans\"\n","\n","        # viz\n","        self.color_dict = {i:v for i,v in enumerate(plt.cm.get_cmap('tab10').colors)}\n","        self.histogram = None # not sure what this was meant for...\n","        self.feature_names = None\n","    \n","    def get_filename(self):\n","        return None #some_string\n","\n","    def Histogram(self, df: pd.DataFrame, num_bins:int = None,title:str=None):\n","        title = title or 'Histograms'\n","        num_rows = len(df.index)\n","        num_bins = num_bins or min(25, num_rows)\n","\n","        axes = df.plot(kind='hist',subplots=True, figsize=(20,5),bins=num_bins,\n","                title=title,layout=(1,len(df.columns)),color='k',sharex=False,\n","                sharey=True, logy=True,bottom=1)\n","        # for axrow in axes:\n","        #     for ax in axrow:\n","        #         print(ax)\n","        #         ax.set_yscale('log')\n","        \n","    def ExcludeOutliers(self, df):\n","        return df, []\n","    \n","    # @df_np_df\n","    def Scaled(self, df, scaling_method:str =None):\n","        nparray = df.to_numpy()\n","        scaling_method = scaling_method or self.scaling_method\n","        if scaling_method == \"Standard\":\n","            data = RobustScaler().fit_transform(nparray)\n","        elif scaling_method == \"Robust\":\n","            data = StandardScaler().fit_transform(nparray)\n","        return pd.DataFrame(nparray, columns=df.columns), []\n","        \n","    # @df_np_df\n","    def Normalized(self, df):\n","        nparray = df.to_numpy()\n","        data = Normalizer().fit_transform(nparray)\n","        return pd.DataFrame(nparray, columns=df.columns), []\n","      \n","    def PCA(self, df, dimension_count:int = None):\n","        dimension_count = dimension_count or self.pca_dimension_count\n","        return df, []\n","      \n","    def Scree(self, df):\n","        return\n","      \n","    def Cluster(self, df, column_names, clustering_method=None):\n","        clustering_method = clustering_method or self.clustering_method\n","        if clustering_method == \"KMeans\":\n","            pass\n","        elif clustering_method == \"FuzzyCMeans\":\n","            pass\n","        return df, []\n","\n","    def Silhouettes(self, df):\n","        return\n","      \n","    def SaveMeta(self, meta_list):\n","        return None, []\n","      \n","    def RunWorkflow(self, df, meta):\n","        data = df.copy()\n","        new_meta = meta.copy()\n","        if self.pre_histogram:\n","            self.Histogram(data, title='Pre Normalization Histogram')\n","        if self.do_exclude_outliers:\n","            data, md = self.ExcludeOutliers(data)\n","            new_meta.extend(md)\n","        if self.do_scaling:\n","            data, md = self.Scaled(data)\n","            new_meta.extend(md)\n","        if self.do_normalization:\n","            data, md = self.Normalized(data)\n","            new_meta.extend(md)\n","        if self.post_histogram:\n","            self.Histogram(data, title='Post Normalization Histogram')\n","        if self.do_PCA:\n","            data, md = self.PCA(data)\n","            new_meta.extend(md)\n","        if self.plot_scree:\n","            self.Scree(data)\n","        if self.do_clustering:\n","            data, md = self.Cluster(data, column_names=[f\"PCA{i}\" for i in range(self.pca_dimension_count)])\n","            new_meta.extend(md)\n","        if self.plot_silhouettes:\n","            self.Silhouettes(data)\n","        return data, new_meta"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9CECgJtw06aU","colab_type":"text"},"source":["Test Case"]},{"cell_type":"code","metadata":{"id":"MNVZqkJS0-UZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":623},"outputId":"d88160f7-c87f-4cfe-8f73-613de7322511","executionInfo":{"status":"ok","timestamp":1582915571063,"user_tz":360,"elapsed":571,"user":{"displayName":"John Mccloskey","photoUrl":"","userId":"09367906756780102030"}}},"source":["fpath = 'Data/Filtered Log Data/sample_filter_output.csv'\n","meta = []\n","with open(fpath) as f:\n","    for l in f.readlines():\n","        if l.startswith('# '):\n","            meta.append(l[2:-1])\n","        else:\n","            break\n","df = pd.read_csv(fpath,comment='#',index_col=['sessID','num_play'])\n","print(*meta,sep='\\n')\n","df"],"execution_count":128,"outputs":[{"output_type":"stream","text":["Import from fhttps://github.com/fielddaylab/opengamedata/blob/master/jupyter/lakeland_data/LAKELAND_20191201_to_20191231_b2cf46d_proc.zip?raw=true\n","Import from fData/Raw Log Data/LAKELAND_20200101_to_20200131_a9720c1_proc.zip\n","Query: Intial Shape, output_shape: (32227, 1600)\n","Query: sess_avg_num_tiles_hovered_before_placing_home > 1, output_shape: (20303, 1600)\n","Query: debug == 0, output_shape: (20297, 1600)\n","Query: sess_ActiveEventCount >= 10, output_shape: (19244, 1600)\n","Query: sessDuration >= 300, output_shape: (12826, 1600)\n","Query: _continue == 0, output_shape: (9687, 1600)\n","Filled NaN with 0\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>avg_lvl_0_to_2_count_buy_farm</th>\n","      <th>avg_lvl_0_to_2_count_buy_fertilizer</th>\n","      <th>avg_lvl_0_to_2_count_buy_home</th>\n","      <th>avg_lvl_0_to_2_money_spent</th>\n","      <th>wighted_avg_lvl_0_to_2_avg_num_tiles_hovered_before_placing_farm</th>\n","    </tr>\n","    <tr>\n","      <th>sessID</th>\n","      <th>num_play</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>19110002150060536</th>\n","      <th>1</th>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1750.000000</td>\n","      <td>0.809524</td>\n","    </tr>\n","    <tr>\n","      <th>19110008292229944</th>\n","      <th>1</th>\n","      <td>0.666667</td>\n","      <td>3.333333</td>\n","      <td>0.666667</td>\n","      <td>1570.000000</td>\n","      <td>0.354167</td>\n","    </tr>\n","    <tr>\n","      <th>19110009364430810</th>\n","      <th>2</th>\n","      <td>0.333333</td>\n","      <td>1.666667</td>\n","      <td>0.666667</td>\n","      <td>1116.666667</td>\n","      <td>4.217391</td>\n","    </tr>\n","    <tr>\n","      <th>19110010164029110</th>\n","      <th>1</th>\n","      <td>0.666667</td>\n","      <td>1.333333</td>\n","      <td>0.666667</td>\n","      <td>1300.000000</td>\n","      <td>2.382353</td>\n","    </tr>\n","    <tr>\n","      <th>19110010203440010</th>\n","      <th>1</th>\n","      <td>1.333333</td>\n","      <td>0.333333</td>\n","      <td>0.666667</td>\n","      <td>1066.666667</td>\n","      <td>4.200000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20000623064839788</th>\n","      <th>1</th>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.333333</td>\n","      <td>633.333333</td>\n","      <td>1.062500</td>\n","    </tr>\n","    <tr>\n","      <th>20000623254750504</th>\n","      <th>3</th>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>1083.333333</td>\n","      <td>0.125000</td>\n","    </tr>\n","    <tr>\n","      <th>20010608100268980</th>\n","      <th>1</th>\n","      <td>1.000000</td>\n","      <td>2.333333</td>\n","      <td>2.333333</td>\n","      <td>3616.666667</td>\n","      <td>0.486486</td>\n","    </tr>\n","    <tr>\n","      <th>20010608250817020</th>\n","      <th>1</th>\n","      <td>0.333333</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1716.666667</td>\n","      <td>0.175000</td>\n","    </tr>\n","    <tr>\n","      <th>20010614191119680</th>\n","      <th>1</th>\n","      <td>1.333333</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>1600.000000</td>\n","      <td>1.653846</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9687 rows × 5 columns</p>\n","</div>"],"text/plain":["                            avg_lvl_0_to_2_count_buy_farm  \\\n","sessID            num_play                                  \n","19110002150060536 1                              1.000000   \n","19110008292229944 1                              0.666667   \n","19110009364430810 2                              0.333333   \n","19110010164029110 1                              0.666667   \n","19110010203440010 1                              1.333333   \n","...                                                   ...   \n","20000623064839788 1                              0.666667   \n","20000623254750504 3                              1.000000   \n","20010608100268980 1                              1.000000   \n","20010608250817020 1                              0.333333   \n","20010614191119680 1                              1.333333   \n","\n","                            avg_lvl_0_to_2_count_buy_fertilizer  \\\n","sessID            num_play                                        \n","19110002150060536 1                                    0.666667   \n","19110008292229944 1                                    3.333333   \n","19110009364430810 2                                    1.666667   \n","19110010164029110 1                                    1.333333   \n","19110010203440010 1                                    0.333333   \n","...                                                         ...   \n","20000623064839788 1                                    0.666667   \n","20000623254750504 3                                    0.666667   \n","20010608100268980 1                                    2.333333   \n","20010608250817020 1                                    0.000000   \n","20010614191119680 1                                    0.666667   \n","\n","                            avg_lvl_0_to_2_count_buy_home  \\\n","sessID            num_play                                  \n","19110002150060536 1                              1.000000   \n","19110008292229944 1                              0.666667   \n","19110009364430810 2                              0.666667   \n","19110010164029110 1                              0.666667   \n","19110010203440010 1                              0.666667   \n","...                                                   ...   \n","20000623064839788 1                              0.333333   \n","20000623254750504 3                              0.666667   \n","20010608100268980 1                              2.333333   \n","20010608250817020 1                              1.000000   \n","20010614191119680 1                              0.666667   \n","\n","                            avg_lvl_0_to_2_money_spent  \\\n","sessID            num_play                               \n","19110002150060536 1                        1750.000000   \n","19110008292229944 1                        1570.000000   \n","19110009364430810 2                        1116.666667   \n","19110010164029110 1                        1300.000000   \n","19110010203440010 1                        1066.666667   \n","...                                                ...   \n","20000623064839788 1                         633.333333   \n","20000623254750504 3                        1083.333333   \n","20010608100268980 1                        3616.666667   \n","20010608250817020 1                        1716.666667   \n","20010614191119680 1                        1600.000000   \n","\n","                            wighted_avg_lvl_0_to_2_avg_num_tiles_hovered_before_placing_farm  \n","sessID            num_play                                                                    \n","19110002150060536 1                                                  0.809524                 \n","19110008292229944 1                                                  0.354167                 \n","19110009364430810 2                                                  4.217391                 \n","19110010164029110 1                                                  2.382353                 \n","19110010203440010 1                                                  4.200000                 \n","...                                                                       ...                 \n","20000623064839788 1                                                  1.062500                 \n","20000623254750504 3                                                  0.125000                 \n","20010608100268980 1                                                  0.486486                 \n","20010608250817020 1                                                  0.175000                 \n","20010614191119680 1                                                  1.653846                 \n","\n","[9687 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":128}]},{"cell_type":"code","metadata":{"id":"yrQTzu6T2lTP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"6869f38b-47ae-4ff5-a04a-0d0a2755a5d7","executionInfo":{"status":"ok","timestamp":1582915583203,"user_tz":360,"elapsed":4256,"user":{"displayName":"John Mccloskey","photoUrl":"","userId":"09367906756780102030"}}},"source":["w = Workflow('test','Graphs/temp')\n","w.RunWorkflow(df,meta)"],"execution_count":129,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(      avg_lvl_0_to_2_count_buy_farm  avg_lvl_0_to_2_count_buy_fertilizer  \\\n"," 0                          1.000000                             0.666667   \n"," 1                          0.666667                             3.333333   \n"," 2                          0.333333                             1.666667   \n"," 3                          0.666667                             1.333333   \n"," 4                          1.333333                             0.333333   \n"," ...                             ...                                  ...   \n"," 9682                       0.666667                             0.666667   \n"," 9683                       1.000000                             0.666667   \n"," 9684                       1.000000                             2.333333   \n"," 9685                       0.333333                             0.000000   \n"," 9686                       1.333333                             0.666667   \n"," \n","       avg_lvl_0_to_2_count_buy_home  avg_lvl_0_to_2_money_spent  \\\n"," 0                          1.000000                 1750.000000   \n"," 1                          0.666667                 1570.000000   \n"," 2                          0.666667                 1116.666667   \n"," 3                          0.666667                 1300.000000   \n"," 4                          0.666667                 1066.666667   \n"," ...                             ...                         ...   \n"," 9682                       0.333333                  633.333333   \n"," 9683                       0.666667                 1083.333333   \n"," 9684                       2.333333                 3616.666667   \n"," 9685                       1.000000                 1716.666667   \n"," 9686                       0.666667                 1600.000000   \n"," \n","       wighted_avg_lvl_0_to_2_avg_num_tiles_hovered_before_placing_farm  \n"," 0                                              0.809524                 \n"," 1                                              0.354167                 \n"," 2                                              4.217391                 \n"," 3                                              2.382353                 \n"," 4                                              4.200000                 \n"," ...                                                 ...                 \n"," 9682                                           1.062500                 \n"," 9683                                           0.125000                 \n"," 9684                                           0.486486                 \n"," 9685                                           0.175000                 \n"," 9686                                           1.653846                 \n"," \n"," [9687 rows x 5 columns],\n"," ['Import from fhttps://github.com/fielddaylab/opengamedata/blob/master/jupyter/lakeland_data/LAKELAND_20191201_to_20191231_b2cf46d_proc.zip?raw=true',\n","  'Import from fData/Raw Log Data/LAKELAND_20200101_to_20200131_a9720c1_proc.zip',\n","  'Query: Intial Shape, output_shape: (32227, 1600)',\n","  'Query: sess_avg_num_tiles_hovered_before_placing_home > 1, output_shape: (20303, 1600)',\n","  'Query: debug == 0, output_shape: (20297, 1600)',\n","  'Query: sess_ActiveEventCount >= 10, output_shape: (19244, 1600)',\n","  'Query: sessDuration >= 300, output_shape: (12826, 1600)',\n","  'Query: _continue == 0, output_shape: (9687, 1600)',\n","  'Filled NaN with 0'])"]},"metadata":{"tags":[]},"execution_count":129},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAABJoAAAFTCAYAAABxtmZdAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjMsIGh0\ndHA6Ly9tYXRwbG90bGliLm9yZy+AADFEAAAgAElEQVR4nOzdeXhU9dn/8c9NggQEIiAurIKgRBKW\nsMgiIEUQVFBUtlKruFBRn6p96lP9tSq1aN1aBatVcQHRqmjVSlVUVBSpyqKAbAqyKCASggQhYUly\n//6YZDoJWQYyIWfg/bquXFfmzMw595nJZ87Mne/5jrm7AAAAAAAAgIqqVtUFAAAAAAAA4PBAowkA\nAAAAAAAxQaMJAAAAAAAAMUGjCQAAAAAAADFBowkAAAAAAAAxQaMJAAAAAAAAMUGjCQAAxD0zO8nM\n3MwSCy6/ZWaXVsJ2lpnZmbFeb5TbrpR9AgAAiCUaTQAAHCbMbJ2Z5ZjZTjP7wcymmFntGK17fEEj\nZ3jEssSCZSfFYhux5O6D3H1qRdZR8PhNKLbetu4+u0LFlbyt2WZ2ZbFlZ5rZhohtR7VPBc9Jq1jX\nCAAAEA0aTQAAHF4Gu3ttSemSOkv6Q/EbWMjBvAfYJumPZpZQwRpVOPII8YXnDQAAlIdGEwAAhyF3\n3yjpLUmpUnjEzJ1mNldStqSWZpZsZk+a2fdmttHMJpTTRJopaa+kX5R0ZcH6njGzDDNbb2Z/KGxo\nmdllZjbXzB4ws0xJ44st225ma8ysR8Hy78xsS+SpYmZ2rpl9YWY7Cq4fX1qhkSOEzGxxwSivwh8v\nPP3NzF4ys81mlmVmH5lZ24LlYyWNlvR/BfeZUbB8nZmdVfB7DTN70Mw2Ffw8aGY1Cq4708w2mNn/\nFuzH92Y2prznrSzF9qmVmX1YUPdWM3uxYPlHBTcv3OcRBcuvMrPVZrbNzF43s0YR6x1gZl8VrOuR\ngvUWbqek5+1kM3vfzDILtv2cmR0Tsb51ZnaTmS0xs10Ff2PHW+jUv5/MbJaZ1avIYwEAAIKLRhMA\nAIchM2sq6RxJX0QsvkTSWEl1JK2XNEVSrqRWkjpKGiCpyOlbxbikWyXdbmbVS7j+IUnJklpK6iPp\nl5IimyunS1oj6XhJd0YsWyKpgaR/SHpBUpeCmn4h6W/239P/dhWs8xhJ50oaZ2YXlFFvqGj39u5e\nu2Ck128kfSXp84Kr35LUWtJxBcueK7jP4wW/31tw38ElrPr3krpJ6iCpvaSuKjqC7ISCx6OxpCsk\nPRzDBsufJL0jqZ6kJgo99nL33gXXF+7zi2b2M0l/ljRc0okKPfcvSJKZHSvpZUm3KPQcfCWpR7Ft\nFX/erGB9jSSlSGoqaXyx+1wkqb+kUyQNVuhx/n+SGir0/vPXFdx/AAAQUDSaAAA4vLxmZtslfSzp\nQ0l3RVw3xd2XuXuupPoKNaJucPdd7r5F0gOSRpa1cnd/XVKGijWkCkZCjZR0i7v/5O7rJP1FoeZW\noU3u/pC757p7TsGyte7+tLvnSXpRoabFHe6+x93fUWgEVauCbc929y/dPd/dl0h6XqGGVlTM7AxJ\nEyQNcfcdBet8qqDePQo1S9qbWXKUqxxdUOsWd8+Q9Mdi+7uv4Pp97v6mpJ2STi1jfZMKRnZtL3gO\n/13GbfdJai6pkbvvdvePy6nzKXf/vGA/b5HU3UJza50jaZm7v1LwdzFJ0uZi9y/yvLn7and/t+A5\nypD0V+3/PDzk7j8UjKybI+kzd//C3XdLelWhxiYAADgM0WgCAODwcoG7H+Puzd39moiGjiR9F/F7\nc0nVJX0f0dh4TKGRPeX5g0KjeZIilh1bsL71EcvWKzSap6TtF/oh4vccSXL34stqS5KZnW5mHxSc\nmpcl6eqC7ZarYITXdEmXuvvXBcsSzOxuM/vGzHZIWhexL9FopP33t1HE5cyC5k2h7MJ9KcWvC567\nY9z9GEnnlXHb/1NoZNE8C30T3uXR1unuOyVlKvTcNFLE8+LuLmlDsfsXed4KToN7wUKnW+6Q9Kz2\nf8yKP4clPqcAAODwQ6MJAIAjh0f8/p2kPZKOjWhu1HX3tuWuxP1dSaslXROxeKv+O8qmUDNJG0vZ\n/sH4h6TXJTV192RJjyrUbCmTmdWU9JqkB939rYirfi7pfElnKXSK20mFd4my3k3af383lVdPLLj7\nZne/yt0bSfqVpEes9G+aK1KnmR2t0GlyGyV9r9Cpd4XXWeTlws0Vu3xXwbI0d6+r0CmO5T4PAADg\nyECjCQCAI5C7f6/QHD9/MbO6ZlatYJLnaE9F+71Co2oK15en0IihO82sjpk1V2g+pGdjWHYdSdvc\nfbeZdVWoURSNpyStdPd7S1jfHoVG99RS0dMMpdAonJZlrPd5SX8ws4YFcx3dptjub6nMbJiZFTaE\nflSo8ZNfcLl43c9LGmNmHQomK79LoVPZ1kl6Q1KamV1goW+Uu1ahuaXKUkeh0wCzzKyxpJtisU8A\nAODwQKMJAIAj1y8lHSVpuULNipcVmiy6XO4+V9K8Yov/R6EJu9coNEfUPxRq8sTKNZLuMLOfFGrq\nTI/yfiMlDS32zXO9JD2j0CllGxV6DD4tdr8nJZ1WcGrhayWsd4KkBQpNZv6lQpOJTzjQnTpIXSR9\nZmY7FRrldb27rym4brykqQV1D3f3WQpN4v5PhUYwnayCubjcfaukYZLuVajhdlrBPu0pY9t/lJQu\nKUuhRtUrsd01AAAQzyx0Kj4AAACOdGZWTaE5mka7+wdVXQ8AAIg/jGgCAAA4gpnZ2WZ2TMFpdf9P\nofmWio/uAgAAiAqNJgAAgCNbd0nfKDSh+2CFvrkwp+y7AAAAlIxT5wAAAAAAABATjGgCAAAAAABA\nTNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgCAAAAAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgCAAAA\nAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgCAAAAAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgC\nAAAAAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgCAAAAAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM\n0GgCAAAAAABATNBoAgAAAAAAQEzQaAIAAAAAAEBM0GgCAAAAAABATCRWdQEVceyxx/pJJ51U1WUA\nVWLhwoVb3b1hVddRErKJIxnZBIKJbALBRDaBYKpINuO60XTSSSdpwYIFVV0GUCXMbH1V11Aasokj\nGdkEgolsAsFENoFgqkg2OXUOAAAAAAAAMUGjCQAAAAAAADFBowkAAAAAAAAxYe5e1TWUa+HChccl\nJiY+ISlVEc2xzMzM5ieeeGLVFQYcAklJSWrSpImqV69eZLmZLXT3zge6vtLyFEtkE0eCWGfzYB1I\npskmjgRByeaB6Ny5s5c2D8y+ffu0YcMG7d69+5DU4u7Ky8tTPHxGQHwxMyUkJMjMiizfuHHj3oYN\nG35fRWWVieMmjgSVcdyMi8nAExMTnzjhhBNSGjZs+GO1atXCR73ly5c3T0lJqcrSgErl7srMzNSG\nDRvUokWLmKyztDzFEtnE4a4ysnmwDiTTZBOHuyBlM1Y2bNigOnXq6KSTTtrvA3plWLt2rerUqaMG\nDRocku3hyODuys3NVX5+vmrUqFHkury8vNzU1NStVVRamThu4nBXWcfNeDl1LrVhw4Y7KutDMRBU\nZqYGDRrE+r+Y5AmooErK5sEi00CBgGUzJnbv3n1Imz6Hens4MpiZEhMTlZ+fX9WlAIhQWcfNQDWa\nzOxoM1tgZucVu6oab6BxpKqEN3rkCYiBAH0II9NAhABlM2YO9T4djo8hqh5/V0AwVUY2K7XRZGZP\nmdkWM1tabPlAM/vKzFab2c0RV/1O0vTKrAkAAAAAAACVo7JHNE2RNDBygZklSHpY0iBJp0kaZWan\nmVl/ScslbSlvpWbWycw6tW3bVmZW4Z+qdNlll+nll18u8zYnnXSStm4t/bTlmTNn6tRTT1WrVq10\n9913l7muBx98UNnZ2QdcZ3Z2ts4991y1adNGbdu21c0331z+nSrRokWL9Oabb5Z5m/Hjx+v++++v\ntBpeeuklpaSkqG/fvpW2jUOhME+x+qnq/SFTBydeM7V9+3Y98sgj4cubNm3SxRdfLEmaPXu2zjsv\nNED29ddfL/e5PFyUlc+DOW5WNTJ9cIKQ6dq1a1fauo9ksXjveyAZr8ztrV27Vtu2bStz+0uWLNG+\nffvCl8855xxt3749fDkrK0tLly7Vl19+qe+/D80nfeaZZ6qkydXfe+89zZgxo9x9Lq5Pnz565ZVX\ntHTpUi1dulQbNmw44HUcrGhyWtr+Flq4cKHS0tLUqlUr/frXvy5zovcpU6Zo06ZNB1Xr6NGj1bp1\na7Vt21aXX355keftcFb8Mbvyyiu1fPlySeUfnw5Eec9zVSnvb/Rg6h41apTatWunBx54oKLlHZB1\n69YpNTX1oO572223adasWTGtZ9KkSUpJSdHo0aNjut5DoVIbTe7+kaTiR4+ukla7+xp33yvpBUnn\nSzpTUjdJP5d0lZkF6rS+oMrLy9O1116rt956S8uXL9fzzz8ffmErycG+gZak3/72t1q5cqW++OIL\nzZ07V2+99dbBll1h0byBrmxPPvmkJk+erA8++CCq2+fm5lZyRYgFMlV1DiZTxRtNjRo1KrEpMWTI\nkAp/8CfD8YlMA4eXN998U8ccc4yk0CS23377bbi5sW3bNuXk5JR63//85z8Hncv69esrNTVVp512\nmnbu3KmsrKyDWk9VGDdunCZPnqxVq1Zp1apVmjlzZqm3rWij6e2339ZHH32knJwcPfHEEwdbclwp\n/pg98cQTOu2006qwooqryvc8mzdv1vz587VkyRLdeOONUd0nCO/R7rjjDp111lkxXecjjzyid999\nV88991xUtw/C41CoKpo5jSV9F3F5g6TG7v57d79B0j8kTXb3EmeK27x587GHoMb9XHDBBerUqZPa\ntm2rxx9/XI8++qhuuumm8PVTpkzRddddJ0n605/+pFNPPVVnnHGGRo0aFdV/C2fOnKlhw4aFL0f+\nJ74s8+bNU6tWrdSyZUsdddRRGjlypP71r3+VeNtJkyZp06ZN6tu3b3jEwPPPP6+0tDSlpqbqd7/7\nXanbqVWrVvg+Rx11lNLT08v8b84PP/ygoUOHqn379mrfvr3+85//SJL++te/KjU1VampqXrwwQcl\n7d85vv/++zV+/HhJoQ747373O3Xt2lWnnHKK5syZo7179+q2227Tiy++qA4dOujFF18stY7Fixer\ne/fuat26tSZPnixp/8f2uuuu05QpU/T+++/rggsuCC9/9913NXTo0BLXe8cdd+jjjz/WFVdcoZtu\nuknr1q1Tr169lJ6ervT09PD+zp49W7169dKQIUN02mmnad26dWrTpo0uu+wynXLKKRo9erRmzZql\nnj17qnXr1po3b16p+xIvli5dmhLNixyZIlORimcqLy9PN910k7p06aJ27drpscceC28rMlM333yz\nvvnmG3Xo0CGcxZL+ExX599ShQ4fwT82aNfXhhx9q165duvzyy9W1a1d17Ngx/JxPmTJFQ4YM0c9+\n9jP169ev1McFZJpMl+z3v/+92rdvr27duumHH34I78/PfvYztWvXTv369dO3334rKTR6bdy4cerW\nrZtatmyp2bNn6/LLL1dKSoouu+yy8Drfeecdde/eXenp6Ro2bJh27txZZg1BZWZjC+YmXZCRkVHV\n5VSprKwsffPNN5Kk++67T/fee69WrVqlG2+8UVdeeaUk6f3339fo0aOLjBC57bbbNGTIEPXr10+j\nR4/Wiy++GB7t9NJLLxXJxXfffaeHH35YL7zwglJSUvTiiy/q22+/1dChQ8MZL3xtyMnJ0ciRI5WS\nkqKhQ4dq9+7d4RF61apVU61atbR3795w/ePGjVPnzp3Vtm1b3X777Vq7dq2mTp2qs88+W19++aV+\n+uknvfDCC+rTp4/Wrl2rJ598UqeccorS09N18cUX6+c//3mR14vPP/9cGzdu1LJly5SRkaG8vDyt\nXLlSXbp00erVq7V8+XK9++67atu2rdxdu3btCn/AdHd9+eWX4dFE33//vXbs2KFu3brJzHThhRfq\n6aef1rJly7Ry5UpJ0tatW7V69WpNnDhR8+bN04gRI9ShQwfl5OTo1VdfVUpKik455RQNHz48PGFw\nZI0rVqzQvn371Lt3b2VlZWnjxo1q1qyZ1q1bV+pzPm/ePHXv3l0dO3bU6NGjkxYvXlxDktq3b99m\nwYIFSYW369q166kfffRRrU2bNiX26NGjdatWrdqOGDGieaNGjdK+//77Er9B/auvvjqqZcuWbUeO\nHNm8VatWbXv27Nl6586dFrm+gscmsXHjxmmSNGnSpAZnnXXWyT169GjdqFGjDjfffHPa//7v/6Zd\neOGF6tatW6kj715++WUtWLBAo0ePDj9mpY3gefbZZ9W1a1d16NBBv/rVr5SXl6e8vDxddtllSk1N\nVVpaWrkjeIr/XUuhCfzHjBmjtLQ0dezYMfwPu27dumnZsmXh+xbWdSDvee67777we7Hbb789vK47\n77xTp5xyis444wx99dVXZdYsSdOmTVOHDh2Umpoa/rxTWh0DBgzQxo0b1aFDB82ZM0eLFi1St27d\n1K5dOw0dOlQ//vhjeH9uuOEGde7cWRMnTlRGRoYuuugidenSRV26dNHcuXNLrWf8+PG65JJL9jv+\nRSrt850k3XPPPUpLS1P79u3D/8iMHIF90kkn6fbbb1d6errS0tLCWcvIyFD//v3Vtm1bXXnllWre\nvHmpI96uvvpqrVmzRoMGDdIDDzxQJDM9evQIP+7Fn7fZs2erT58+Ov/889WyZUvdfPPNeu6559S1\na1elpaWFX2srnbtX6o+kkyQtjbh8saQnIi5fIulvZa1j0aJF69x9QeGPJI/lTzQyMzPd3T07O9vb\ntm3rmzdv9pNPPjl8/cCBA33OnDk+b948b9++vefk5PiOHTu8VatWft9995W63ksvvdRfeukl37dv\nnzdt2tR37tzp7u5XX321T5s2zd3dmzdv7hkZGSXe/6WXXvIrrrgifPmZZ57xa6+9ttTtRa5r48aN\n3rRpU9+yZYvv27fP+/bt66+++mq5j8WPP/7oLVq08G+++abU2wwfPtwfeOABd3fPzc317du3+4IF\nCzw1NdV37tzpP/30k5922mn++eef+9q1a71t27bh+953331+++23u7t7nz59/De/+Y27u7/xxhve\nr18/d3d/+umny9xPd/fbb7/d27Vr59nZ2Z6RkeFNmjTxjRs3+gcffODnnntu+HbXXnutP/30056f\nn++nnnqqb9myxd3dR40a5a+//nqp6+/Tp4/Pnz/f3d137drlOTk57u7+9ddfe6dOndzd/YMPPvBa\ntWr5mjVr3N197dq1npCQ4EuWLPG8vDxPT0/3MWPGeH5+vr/22mt+/vnnl7it5cuX77dM0gI/iEwe\ngjwtWLZsWZnPjbv7rFmzfP78+T5nzhxv2bKlz5w505s0aRJ+TMlUUUdaph577DH/05/+5O7uu3fv\n9k6dOvmaNWtKzFTkvkZejqyrpP17/fXX/YwzzvC9e/f6LbfcEv77+PHHH71169a+c+dOf/rpp71x\n48bhY0Bxsczmwf5Udqbnz58f/ikLx8n/ItMhksLX33TTTeFMn3feeT5lyhR3d3/yySfDx75LL73U\nR4wYET4m1qlTp8jx8osvvvCMjAzv1atX+O/g7rvv9j/+8Y/7bTsI2TyQn8L3DSUpvi+V/T74UG5v\nzZo1npmZ6fn5+b548WLPzc31Tz75xM855xzfunWrn3HGGd62bVvftWuXjx8/3h999NFwRufNm+ep\nqam+cuXK8GvJ+PHjff369aXm4o477vBx48a5u/uePXv8iiuuCP9tz5s3z08++WTfuXOn/+Uvf/Ex\nY8a4u/vixYs9ISEh/Bq4b98+X7Jkie/evTu8H4Wvf7m5ud6nTx9/4403fOXKld60aVPfsGGDL1y4\n0K+88kp/5pln/IMPPvBmzZr5999/7wsWLPCePXv6Nddc4ytXrvRt27a5u/v8+fP9xx9/dHf3G2+8\n0W+99VZ3d09JSfElS5a4u/uECRP8uuuuc3f37t27+8yZM93dffv27b5q1apwbfPnzw/vv7v71KlT\nfdCgQeF9cXfPyMjwRYsW+b59+7xPnz7+wgsv+M6dO33btm1+wgkn+IoVK9zd/cILLwznOLLG7777\nzjdu3Bh+Tjdv3uwdO3b0jz76aL+/r+zsbHd3z8rKCm//scceyxkwYMCP7r5g/Pjx395www2b3H3B\nunXrFjdv3ny3uy+45JJLttx8880b3H3BSy+99LUk37Rp0yKPOP4V/qxcuXJJQkKCz507d5m7Lxg0\naNC2hx9+eI27L+jSpctPH3744XJ3X7Bp06ZFjRo12uPuCyZOnLi2adOmu7dt2/b5xo0bF9WuXTv3\nnnvuWb9s2TK/4YYbwq/Xxc2fP9/T09N96tSp4WNl4WX3/x5Tli9f7uedd57v3bvX3d3HjRvnU6dO\n9QULFvhZZ50VXl/hY1qS0v6u77///vDf64oVK7xp06aek5Pjf/3rX/22225zd/dNmzb5Kaec4u4e\n9Xuet99+26+66irPz8/3vLw8P/fcc/3DDz8MH6t27drlWVlZfvLJJ5d5HO/Tp49feeWV7u7+4Ycf\nho9npdVR/JiXlpbms2fPdnf3W2+91a+//vrwegvz7B46Js2ZM8fd3devX+9t2rQptabSjn+R2y7t\n892bb77p3bt39127drn7f/Nf+H7FPfS8T5o0yd3dH3744fD7kGuvvdbvuusud3d/6623XFKp718K\n11N4fWRm3n33Xb/wwgvd3fd73j744ANPTk72TZs2+e7du71Ro0bhv4MHH3ww/PgVF+vjZlWMaNoo\nqWnE5SYFywJt0qRJ4f/Ifffdd1q7dq1atmypTz/9VJmZmVq5cqV69uypuXPn6vzzz1dSUpLq1Kmj\nwYMHR7X+xMREDRw4UDNmzFBubq7eeOMNnX/++ZW6T/Pnz9eZZ56phg0bKjExUaNHj9ZHH31U5n1y\nc3M1atQo/frXv1bLli1Lvd3777+vcePGSZISEhKUnJysjz/+WEOHDtXRRx+t2rVr68ILLwx34sty\n4YUXSpI6depU5n9GSnL++eerZs2aOvbYY9W3b98yRwyZmS655BI9++yz2r59uz755BMNGjQoqu3s\n27dPV111ldLS0jRs2LAip2V07dpVLVq0CF9u0aKF0tLSVK1aNbVt21b9+vWTmSktLe2A9y+evfji\ni/r5z3+uyy+/XD/88IM2bdqkxo0b68svvyRTJTjSMvXOO+/omWeeUYcOHXT66acrMzNTq1atkrR/\npg7GqlWrdNNNN2n69OmqXr263nnnHd19993q0KGDzjzzTO3evTs8yqJ///6qX79+hbZ3JOA4GUKm\n/+uoo44Kj4yKrO2TTz7Rz3/+c0nSJZdcoo8//jh8n8GDB4ePiccff3yR4+W6dev06aefavny5erZ\ns6c6dOigqVOnav369Qe0zwgeM1PdunWVlZWl9PR0LV68WNWqVVONGjXUvn17LVy4UHPmzFGvXr3C\n95k7d64GDRqkGjVqlPhaUl4usrOz9dlnn+n+++9Xx44dNWbMGOXk5Ojbb7/VRx99pF/84heSpHbt\n2qldu3aSQv+gX7NmjY477jjVqFEjvK7p06crPT1dHTt21LJly7R69Wode+yxGjhwoN5//32Zmd5+\n+21dcMEF+uqrr9SjRw8lJSWpfv36Gj58uMxM9evXD4/OMzMlJydLkqpXrx4erdSvXz899dRTWrZs\nmZ577jn1799feXl5ql69evhUvq1bt+rYY0s/AaRmzZrKyclR8VF0devWVWJiaIBQnTp1tHPnTi1a\ntEiNGjVSXl6eli1bpkGDBoVHdUTWWHyE10033aTevXsXeb6Ky8rK0rBhw5Samqp77723xtdff50k\nSb/85S9/nDFjRj1JeuaZZ+oNHjz4R0maN29e7UsvvXSbJF188cU76tatm1fqyiU1btx4T48ePXIk\nqWPHjtnr1q2rUdbtJalHjx4/1atXL79Ro0a5tWvXzhs2bNh2STF5j/7ee+9p4cKF6tKlizp06KD3\n3ntPa9asUcuWLbVmzRr9z//8j2bOnKm6deuWuZ6S/q4//vjj8N9rmzZt1Lx5c3399dcaPnx4eITN\n9OnTw3NYRvue55133tE777yjjh07Kj09XStXrtSqVas0Z84cDR06VLVq1VLdunU1ZMiQcvd/1KhR\nkqTevXtrx44d2r59e5l1FMrKytL27dvVp08fSdKll15a5Dg8YsSI8O+zZs3Sddddpw4dOmjIkCHa\nsWNHmSNeyzv+lfb5btasWRozZoxq1aolSaW+RyztuRo5cqQkaeDAgapXr17ZD1yxx6IwMzfeeGOR\n0WrF36t26dJFJ554omrUqKGTTz5ZAwYMkBSbv+VolTjcsJLNl9TazFoo1GAaqdC8TIE1e/ZszZo1\nS5988olq1aoVDsLIkSM1ffp0tWnTRkOHDq3wpKkjR47U3/72N9WvX1+dO3dWnTp1yr1P48aN9d13\n/z0TccOGDWrcuHGF6ijL2LFj1bp1a91www0xW2diYqLy8/97pmThkNxChQfyhISEAz7vtPhzYmZl\nbm/MmDEaPHiwkpKSNGzYsPABtzwPPPCAjj/+eC1evFj5+flKSgqP+NXRRx9d4v5ICr+JKvw9SOfV\nHqw1a9Y0z8sr89iv2bNna968eXrqqaeUlJSkX/3qV9q7d68GDBigWbNmad++fWSqAg6HTLm7Hnro\nIZ199tlFls+ePXu/TB2onTt3avjw4Zo8ebJOPPHE8Pb++c9/6tRTTy1y288++6zC2zsScJz8LzL9\nX9WrVw+vP9raIo+JxY+Xubm5SkhIUP/+/fX8889Ht4MBZ2aDJQ1u1apVVZdS5erXr68tW7YoISFB\nzZo107Rp09SjRw8lJydr9uzZWr16tVJSUorcJyEhoUiDo7DpIkWfi8LX/oyMDO3evVtNmzYt9bbr\n169XUlKSjj/++PCytWvX6n/H97cAACAASURBVP7779f8+fNVr149XXbZZdqzZ4/MTCNHjtSkSZOU\nk5NT5DUrNFCgdKVN1D5gwADdfvvtGjdunGrWrBn+gG9mSkhI0I4dO5SdnV2kyd24ceMip+Xl5uaq\nRYsW2rt3r5YvX17mXELursTERLVt21ZSaO6cwve4xWss3KeJEydq69atmjJlSpn7eOutt6pv3756\n9dVXNXPmzN1XXHFFgiS1aNFi3zHHHJP72Wef1XzllVfqP/roowfVST7qqKPCD3JCQoLn5ORUk6TE\nxEQvfJ+anZ1tpd3HzKpt3bq1cVJSUkzeo7u7Lr30Uv35z3/e77rFixfr7bff1qOPPqrp06frqaee\nKnU9B/J637hxYzVo0EBLlizRiy++qEcffTRcSzTvedxdt9xyi371q18VuV3had0HoqRjTWl1HEgj\nJLLe/Px8ffrpp0U+hx1oTZHK+nwXjYocm0sSmZl169bpzDPPDF8XxM+blTqiycyel/SJpFPNbIOZ\nXeHuuZKuk/S2pBWSprv7srLWU9WysrJUr1491apVSytXrtSnn34qSRo6dKj+9a9/6fnnnw93Jnv2\n7KkZM2Zo9+7d2rlzp/79739HvZ0+ffro888/1+TJk8PrK0+XLl20atUqrV27Vnv37tULL7xQZle5\nTp06+umnnySFRgV8+OGH2rp1q/Ly8vT888+Hu8Ul+cMf/qCsrKyoXlz69eunv//975JCB/2srCz1\n6tVLr732mrKzs7Vr1y69+uqr6tWrl44//nht2bJFmZmZ2rNnT1SPWeR+lOVf//qXdu/erczMTM2e\nPVtdunRR8+bNtXz5cu3Zs0fbt2/Xe++9F759o0aN1KhRI02YMEFjxowpd/2FsrKydOKJJ6patWqa\nNm2aymu0HM5atmy5PiEhoczbZGVlqU6dOkpKStK6deu0dOlSSaFzrT/88EMyVYIjLVNnn322/v73\nv4fnmPj666+1a9eug6470uWXX64xY8YU+U/r2WefrYceeij8RvmLL744oHUe6ThOhpDp6PTo0UMv\nvPCCJOm5554rc9RDcd26ddPcuXO1evVqSaE5Pr7++uuDqiMI3H2Gu48tHBlyJKtTp46ys7O1detW\n9erVS/fff7969+6t9PR0TZ48WR07dizyQbBnz556++23tWPHDmVmZurf//63srOzwxOFl7aNHTt2\nSAqNwjn99NM1ceJE5efna9u2bVq7dq2k0KiLf/zjH5KkpUuXasmSJdqyZYtyc3P3a0Tt2LFDRx99\ntJKTk/XDDz8UmWy8T58++uKLL/TPf/4z/JrVrl07/ec//9GePXv0448/6uWXX5a7a9u2beU2z9u2\nbav8/Hz96U9/0ogRI4p8cUG9evW0du1a1atXr8jjdOKJJ6pu3br69NNP5e6aMmWKLr74YjVu3FiJ\niYnhRt2OHTuUm5ur2rVr64cfflDt2rXVsWNHffvtt1qxYoUkaerUqerZs2ep9T3xxBOaM2eOHnvs\nMVWrVvbHzKysrHDT/7XXXivSsb7ooou23XXXXSf89NNPCaeffnqOJHXp0mXntGnT6kvSK6+8UnfH\njh1lv9ksRdOmTffMmzfvaEl67rnnSh1OYmb5TZo02VDee1op9LdU3pdI9OvXTy+//LK2bAl9wfq2\nbdu0fv16bd26Vfn5+brooos0YcIEff755we0P5LUq1ev8GTRX3/9tb799ttw82bEiBG69957lZWV\nFR6ZF+17nrPPPltPPfVUeFTQxo0btWXLFvXu3VuvvfaacnJy9NNPP0X1TY6FcwV+/PHHSk5OVnJy\nclR1JCcnq169euHRvdOmTSv1ODxgwAA99NBD4cuLFi0qs6aSjn+RSvt8179/fz399NPh57y8b86M\n1LNnT02fPl1SaMRY4XxT0YjMTHmN3CCo1BFN7j6qlOVvSjror0Jx94WStHz58k7lzehf1lcpdu7c\nOartDRw4UI8++qhSUlJ06qmnqlu3bpJCL+gpKSlavny5unbtKin0hnbIkCFq165deMh3tG8eEhIS\ndN5552nKlCmaOnVqVPdJTEzU3/72N5199tnKy8vT5ZdfHv6vQ0nGjh2rgQMHqlGjRvrggw909913\nq2/fvnJ3nXvuuaWehrBhwwbdeeedatOmjdLT0yWFJgctnKCxuIkTJ2rs2LF68sknlZCQoL///e/q\n3r27LrvssvBjdeWVV6pjx46SQpM5du3aVY0bN1abNm3K3e++ffuGh1recsstRYZNRmrXrp369u2r\nrVu36tZbb1WjRo0kScOHD1dqaqpatGgRrqHQ6NGjlZGRsd9/zcpyzTXX6KKLLtIzzzyjgQMHxtUI\niMI8HUoDBw7UPffco2HDhql58+bhSW7r1q2rFi1aaP369WSqmCMtU1deeaXWrVun9PR0ubsaNmyo\n1157bb/bNWjQQD179lRqaqoGDRqka6+9tsz1rl+/Xi+//LK+/vrr8H8Mn3jiCd1666264YYb1K5d\nO+Xn56tFixYH1AAJkrIyXdHjZmk4TpLpA/HQQw9pzJgxuu+++9SwYUM9/fTTUd+3YcOGmjJlikaN\nGqU9e/ZIkiZMmKBTTjnloGqJR+WNhom1vLw8rV69Wnv37lVSUpLy8vLUqFEj1alTR6tWrdLu3buV\nlpYWvv2mTZuUmZmp6tWrKzExUcnJyWrYsGG52zEzHXPMMdq6dav69eunv/71r+revbu++eYb1ahR\nY7+GZOFryciRI1W3bl01a9ZMJ5xwgmrWrFnqNgYOHKgnnnhCKSkpGj9+vMaPH6/f/OY3atOmjcxM\nrVu3Vu/evTVu3DiNGTNGKSkpSklJUXp6urZu3apmzZqFT5857rjj1LBhQ7Vv314dO3ZUmzZt1LRp\n0yKNmISEBJ1zzjmaOnWqXn31VUnSCSecoBtvvFFnnHGG6tatqyZNmmjfvn06+uijy2ySSVLTpk01\naNAg3X333Zo5c6YyMjLUvHlzSVLt2rWVl5enBg0a7He/Rx55RJdddplycnLUo0cPNWvWTMuWLVOd\nOnVUs2ZNZWdn6+ijj9Y333yjn/3sZ5owYYImTpyoTz75RI888oguvPBC5eXlKTU1tcjE/MVdffXV\natasmfr37y8p9Dpyxx13lHjb//u//9Oll16qCRMmqFOnTkWu+8UvfvHjrbfe2uz6668Pf5Xb3Xff\nveniiy9u2bp16wadOnXaeeyxx+475phjDvg/uzfffPMPI0aMaDllypSG/fv3336g9y/J4MGD9ec/\n/1k1atQodTTSaaedpgkTJmjAgAHKz89X9erV9fDDD6tmzZoaM2ZMeBRpSSOeynPNNddo3LhxSktL\nU2JioqZMmRIewXLxxRfr+uuv16233hq+fbTveQYMGKAVK1aoe/fukkJ/Y88++6zS09M1YsQItW/f\nXscdd9x+DZqSJCUlqWPHjtq3b1/4MYq2jqlTp+rqq68Oj9Yr7ZgxadIkXXvttWrXrp1yc3PVu3fv\n8CiukpR0/IscTVXa57uBAwdq0aJF6ty5s4466iidc845uuuuu8p9DCTp9ttv16hRozRt2jR1795d\nJ5xwQlSjs6WimTn33HOjuk9VskN9sDoYixcvXte+ffvwdOyZmZnJWVlZx+zatevYyANbSWLRaDpQ\nO3fuVO3atZWdna3evXvr8ccfD7/pRPBdd9116tixo6644oqqLiVsxYoV+72hN7OF7n7Af8TF8xRL\nlZVNMhXfgpipWIllNg9WNJkO2nGTTMe3eMh0ELIZjYhT564qnIeuuJL2pTJVdHt5eXlKSEhQXl6e\nvvrqKzVv3rzS/gEXr68lhXXn5uZq6NChuvzyy8v9Bsfy7Nq1S999911Ujejitm7dquzsbDVr1qxC\nNUQjJydnv2bg0qVLs1NTU1eUcz9LTEz06tWra9asWUdfd911zVeuXLm8rPtURLTHzar4rImKGz9+\nvGrXrq3f/va3h3S7e/bsUUJCghITE/XJJ59o3Lhx5Y68OlRifdysijmaKqxBgwZZDRo0yFq+fHnp\nM91VobFjx2r58uXavXu3Lr300rg44CGkU6dOOvroo/WXv/ylqkuJS5WVTTIVv8hUMATtuEmm4xeZ\nji13nyFpRufOna+q6lpiZf369crJyZG7q0GDBpU6yjteX0vGjx+vWbNmaffu3RowYIAuuOCCCq3v\n+++/V0ZGRoW/KCPIVq9efdTw4cNPLhgN5I899ti6ytxe0I6bODx8++23Gj58uPLz83XUUUdp8uTJ\nVV1SpYnLRlPQFZ7THenaa6/V3Llziyy7/vrro57fIDMzU/369dtv+XvvvVfiENmhQ4eGzzMvdM89\n9+w3sW5JTj/99PBw9ELTpk1TSd38O++8Uy+99FKRZcOGDdPvf//7crcTK08//bQmTpxYZFnPnj31\n8MMPH/C6Fi7c/4yTA3k8UDnIFJnC4YVMk2kcvkr6tsX169fv9+1Pxx9/fJnfjhYpNzdXX3311X7L\nn3nmmRInpF+9evV+f5NNmjSJ6jTdFStWFJkMXwp9Y3DhnE6R6923b99+p27Wr18//EUTpbn//vv3\nW1aR14oTTzxRJ554YpH69u3bp7y8PP35z38O1xdZW0Vecw/k9bP4609+fr569ep1wK8/aWlpe1as\nWFFkBNPmzZsTzjzzzFOL33b27NlfnXDCCTGfMLWkx2zIkCFRfetaRbdzIMfDqhLEumN5/IuF1q1b\n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\nIAyaAAAAABiEQRMAAAAAgzBoAgAAAGAQBk0AAAAADMKgCQAAAIBBGDQBAAAAMAiDJgAAAAAGYdAE\nAAAAwCAu3nQBe6rqR5P8VZI3k/xLa+3zGy4JAAAAgHOw1k80VdWDVfVaVR3dt364qo5V1U5V3dOX\nfzPJo62130vy6+usCwAAAIDhrfvUuc8kOby8UFUXJbkvyc1JDiW5o6oOJTmY5OX+Yz9cc10AAAAA\nDGytg6bW2tNJ3ti3fGOSndbaS621N5M8nOTWJMezGDatvS4AAAAAhreJazRdlbc/uZQsBkwfTnJv\nkk9V1a8lefxUT66qI0mO9Lvfr6pjZ/h9P5Hkv07xWmdb8xScss8Z0uvCT17IQs5ENk/Jfp2fM/Up\nm9OwLfs12Z5e55zNbfk/TCba63n+fTxtr2P6m3u+tfTnbWU2x/T/N5BJZvM8bUuva8tmtdbO97ln\n9wuqPpDk71trP9Pv35bkcGvtd/v930ry4dba3Wv6/c+11m5Yx2uPybb0meh1Lubc27Jt6TPZnl7n\n3ufc+9uzLX0m29PrnPucc2/76XV+5tznnHvbT6/zs84+N3GK2itJrl66f7CvAQAAADBhmxg0PZvk\nuqq6pqouTXJ7ksc2UAcAAAAAA1rroKmqHkrypSQfrKrjVXVXa+0HSe5O8kSSF5I80lp7fo1lPLDG\n1x6Tbekz0etczLm3ZdvSZ7I9vc69z7n3t2db+ky2p9c59znn3vbT6/zMuc8597afXudnbX2u/RpN\nAAAAAGyHTZw6BwAAAMAMzXbQVFWHq+pYVe1U1T2brudsVdWDVfVaVR1dWruiqp6sqhf7v5f39aqq\ne3uP36iq65eec2f/+Rer6s6l9Z+vqm/259xbG/rezaq6uqqeqqp/q6rnq+qP+voce31XVX2lqr7e\ne/3Tvn5NVT3T6/tCv2ZZquqyfn+nP/6Bpdf6RF8/VlUfXVqfzH6fUq3LZHOWvcrmkinVukw259Wr\nXJ5oavXukc159SqbJ5pavcn25LLXIpubzGZrbXa3JBcl+XaSa5NcmuTrSQ5tuq6zrP2Xklyf5OjS\n2l8kuacf35Pkz/vxx5L8Q5JKclOSZ/r6FUle6v9e3o8v7499pf9s9efevKE+35/k+n78Y0m+leTQ\nTHutJO/ux5ckeabX9UiS2/v6/Un+oB//YZL7+/HtSb7Qjw/1vXxZkmv6Hr9oSvt9SrWepHbZnF+v\nsvn2ezGZWk9Su2zOqFe5POH9mFS9+2qXzRn1KpsnvB+Tqnep7q3IZa9FNjeYzbl+ounGJDuttZda\na28meTjJrRuu6ay01p5O8sa+5VuTfLYffzbJbyytf64tfDnJe6rq/Uk+muTJ1tobrbX/TvJkksP9\nsR9vrX25LXbT55Ze64Jqrb3aWvtqP/6fLC4Mf1Xm2WtrrX2/372k31qSX07yaF/f3+vee/Bokl/p\n0/FbkzzcWvvf1tq/J9nJYq9Pab9PqdZ3kM1Z9iqbb5tSre8gm/PqVS5PMLV63yKb8+pVNk8wtXqT\nbE8uE9nMhrM510HTVUleXrp/vK9N1ftaa6/24/9I8r5+fKo+T7d+/CTrG9U/rvehLKavs+y1qi6q\nqq8leS2LP07fTvLdtvgWxv31vdVTf3w3yXtz7u/BGE2p1rMxy/26RzZPqE82p2OW+3XP3LMpl+8w\ntXrPZHb7dZlsyuaGalnV7PbqfrJ54bM510HTbPVp6Wy+KrCq3p3kb5L8cWvte8uPzanX1toPW2s/\nl+RgFlPhn95wSQxsTvs1kU3mY077NdmObMrldpjLft0jm8zBXPbqMtncjLkOml5JcvXS/YN9bar+\ns380L/3f1/r6qfo83frBk6xvRFVdkkXoP99a+9u+PMte97TWvpvkqSS/kMXHMS/uDy3X91ZP/fED\nSb6Tc38PxmhKtZ6NWe5X2ZTNjLvWszHL/bpt2ZTLJNOr90xmuV9lUzYz/npPZ7Z7VTY3l825Dpqe\nTXJdv9L6pVlc5OqxDde0iseS3NmP70zyd0vrH6+Fm5Ls9o8BPpHkI1V1eS2uov+RJE/0x75XVTf1\n8zA/vvRaF1T//Z9O8kJr7S+XHppjr1dW1Xv68Y8k+dUszhF+Kslt/cf297r3HtyW5J/7tP2xJLf3\nbwq4Jsl1WVyAbkr7fUq1no057lfZlM2x13o25rhftyKbcnmCqdV7JrPar4lsRjanUu/pzGqv7pHN\nDWezbegq8Ou+ZXHV+G9lcX7iJzddzznU/VCSV5P8XxbnP96VxTmT/5TkxST/mOSK/rOV5L7e4zeT\n3LD0Or+TxQW8dpL89tL6DUmO9ud8KkltqM9fzOJjit9I8rV++9hMe/3ZJP/aez2a5E/6+rU9vDtJ\n/jrJZX39Xf3+Tn/82qXX+mTv51iWvtVgSvt9SrXuq1s259erbL7z/ZhMrfvqls0Z9SqXJ31PJlXv\nUt2yOaNeZfOk78mk6u01b0Uuey2yucFsVn8iAAAAAKxkrqfOAQAAAHCBGTQBAAAAMAiDJgAAAAAG\nYdAEAAAAwCAMmgAAAAAYhEETAAAAAIMwaAIAAABgEAZNAAAAAAzi/wFmoawxSpT90AAAAABJRU5E\nrkJggg==\n","text/plain":["<Figure size 1440x360 with 5 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\naBLb77//PtLc2LZtmzIzM4u873/+859DzmXt2rWVkpKiM844Q7t27VJGRsYhracijB49WpMmTdLK\nlSu1cuVKzZgxo8jblrXR9O677+qTTz5RZmamnnrqqUMtOa4UfMyeeuopnXHGGRVYUdlV5HueTZs2\nad68eVq8eLFuueWWqO4ThPdod955p84555yYrvOxxx7T+++/rxdeeCGq2wfhcchVEc2c+pJ+yHN5\nvaT67v4Hd79Z0j8kTXL3QmeK27Rp0/GHocaDXHTRRWrfvr1atWqlJ598Uo8//rhuvfXWyPWTJ0/W\njTfeKEn685//rNNPP11nnXWWhg8fHtVfC2fMmKHBgwdHLuf9S3xx5s6dq2bNmqlp06Y65phjNGzY\nMP3rX/8q9LYTJ07Uxo0b1atXr8iIgRdffFGpqalKSUnR73//+yK3U61atch9jjnmGKWlpRX715yf\nfvpJgwYNUps2bdSmTRv95z//kSQ9+OCDSklJUUpKih5++GFJB3eOH3jgAY0bN05SqAP++9//Xp06\nddJpp52m2bNna//+/brjjjv08ssvq23btnr55ZeLrGPRokXq0qWLmjdvrkmTJkk6+LG98cYbNXny\nZH344Ye66KKLIsvff/99DRo0qND13nnnnfr000911VVX6dZbb9XatWvVvXt3paWlKS0tLbK/s2bN\nUvfu3TVw4ECdccYZWrt2rVq0aKErrrhCp512mkaMGKGZM2eqW7duat68uebOnVvkvsSLJUuWtIzm\nRY5Mkam8CmYqOztbt956qzp27KjWrVvriSeeiGwrb6Zuu+02fffdd2rbtm0ki4X9JSrv71Pbtm0j\nP1WrVtXHH3+s3bt368orr1SnTp3Url27yHM+efJkDRw4UL/61a/Uu3fvIh8XkGkyXbg//OEPatOm\njTp37qyffvopsj+/+tWv1Lp1a/Xu3Vvff/+9pNDotdGjR6tz585q2rSpZs2apSuvvFItW7bUFVdc\nEVnne++9py5duigtLU2DBw/Wrl27iq0hqMxsVHhu0vlbtmyp6HIqVEZGhr777jtJ0v3336/77rtP\nK1eu1C233KKrr75akvThhx9qxIgR+UaI3HHHHRo4cKB69+6tESNG6OWXX46MdnrllVfy5eKHH37Q\no48+qpdeekktW7bUyy+/rO+//16DBg2KZDz3tSEzM1PDhg1Ty5YtNWjQIO3duzcyQq9SpUqqVq2a\n9u/fH6l/9OjR6tChg1q1aqWxY8dqzZo1mjJlis4991x9/fXX2rlzp1566SX17NlTa9as0dNPP63T\nTjtNaWlpuvTSS/XrX/863+vFl19+qQ0bNmjp0qXasmWLsrOztWLFCnXs2FGrVq3SsmXL9P7776tV\nq1Zyd+3evTvyAdPd9fXXX0dGE/3444/asWOHOnfuLDPTxRdfrGeffVZLly7VihUrJElbt27VqlWr\nNGHCBM2dO1dDhw5V27ZtlZmZqddff10tW7bUaaedpiFDhkQmDM5b4/Lly3XgwAH16NFDGRkZ2rBh\ngxo1aqS1a9cW+ZzPnTtXXbp0Ubt27TRixIikRYsWVZGkNm3atJg/f35S7u06dep0+ieffFJt48aN\niV27dm3erFmzVkOHDm1cr1691B9//LHQb1D/5ptvjmnatGmrYcOGNW7WrFmrbt26Nd+1a5flXV/4\nsUmsX79+qiRNnDixzjnnnHNq165dm9erV6/tbbfdlvo///M/qRdffLE6d+5c5Mi7V199VfPnz9eI\nESMij1lRI3ief/55derUSW3bttW1116r7OxsZWdn64orrlBKSopSU1NLHMFT8PdaCk3gP3LkSKWm\npqpdu3aRP9h17txZS5cujdw3t67SvOe5//77I+/Fxo4dG1nXXXfdpdNOO01nnXWWvvnmm2JrlqSp\nU6eqbdu2SklJiXzeKaqOvn37asOGDWrbtq1mz56thQsXqnPnzmrdurUGDRqkn3/+ObI/N998szp0\n6KAJEyZoy5YtuuSSS9SxY0d17NhRc+bMKbKecePG6bLLLjvo+JdXUZ/vJOnee+9Vamqq2rRpE/lD\nZt4R2KeccorGjh2rtLQ0paamRrK2ZcsW9enTR61atdLVV1+txo0bFzni7brrrtPq1avVv39/PfTQ\nQ/ky07Vr18jjXvB5mzVrlnr27KkLL7xQTZs21W233aYXXnhBnTp1UmpqauS1tty5e7n+SDpF0pI8\nly+V9FSey5dJ+ltx61i4cOFad5+f+yPJY/kTjfT0dHd337Nnj7dq1co3bdrkp556auT6fv36+ezZ\ns33u3Lnepk0bz8zM9B07dnizZs38/vvvL3K9l19+ub/yyit+4MABb9iwoe/atcvd3a+77jqfOnWq\nu7s3btzYt2zZUuj9X3nlFb/qqqsil5977jm/4YYbitxe3nVt2LDBGzZs6Js3b/YDBw54r169/PXX\nXy/xsfj555+9SZMm/t133xV5myFDhvhDDz3k7u5ZWVm+fft2nz9/vqekpPiuXbt8586dfsYZZ/iX\nX37pa9as8VatWkXue//99/vYsWPd3b1nz57+u9/9zt3d33rrLe/du7e7uz/77LPF7qe7+9ixY711\n69a+Z88e37Jlizdo0MA3bNjgH330kZ9//vmR291www3+7LPPek5Ojp9++um+efNmd3cfPny4v/nm\nm0Wuv2fPnj5v3jx3d9+9e7dnZma6u/u3337r7du3d3f3jz76yKtVq+arV692d/c1a9Z4QkKCL168\n2LOzsz0tLc1HjhzpOTk5/sYbb/iFF15Y6LaWLVt20DJJ8/0QMnkY8jR/6dKlxT437u4zZ870efPm\n+ezZs71p06Y+Y8YMb9CgQeQxJVP5HW2ZeuKJJ/zPf/6zu7vv3bvX27dv76tXry40U3n3Ne/lvHUV\ntn9vvvmmn3XWWb5//36//fbbI78fP//8szdv3tx37drlzz77rNevXz9yDCgoltk81J/yzvS8efMi\nP8XhOPkLMh0iKXL9rbfeGsn0BRdc4JMnT3Z396effjpy7Lv88st96NChkWNijRo18h0vv/rqK9+y\nZYt379498ntwzz33+J/+9KeDth2EbJbmJ/d9Q2EK7kt5vw8+nNtbvXq1p6ene05Oji9atMizsrL8\ns88+8/POO8+3bt3qZ511lrdq1cp3797t48aN88cffzyS0blz53pKSoqvWLEi8loybtw4X7duXZG5\nuPPOO3306NHu7r5v3z6/6qqrIr/bc+fO9VNPPdV37drlf/3rX33kyJHu7r5o0SJPSEiIvAYeOHDA\nFy9e7Hv37o3sR+7rX1ZWlvfs2dPfeustX7FihTds2NDXr1/vCxYs8Kuvvtqfe+45/+ijj7xRo0b+\n448/+vz5871bt25+/fXX+4oVK3zbtm3u7j5v3jz/+eef3d39lltu8TFjxri7e8uWLX3x4sXu7j5+\n/Hi/8cYb3d29S5cuPmPGDHd33759u69cuTJS27x58yL77+4+ZcoU79+/f2Rf3N23bNniCxcu9AMH\nDnjPnj39pZde8l27dvm2bdv8pJNO8uXLl7u7+8UXXxzJcd4af/jhB9+wYUPkOd20aZO3a9fOP/nk\nk4N+v/bs2ePu7hkZGZHtP/HEE5l9+/b92d3njxs37vubb755o7vPX7t27aLGjRvvdff5l1122ebb\nbrttvbvPf+WVV76V5Bs3blzoeY5/uT8rVqxYnJCQ4HPmzFnq7vP79++/7dFHH13t7vM7duy48+OP\nP17m7vM3bty4sF69evvcff6ECRPWNGzYcO+2bdu+3LBhw8Lq1atn3XvvveuWLl3qN998c+T1uqB5\n8+Z5WlqaT5kyJXKszL3s/ssxZdmyZX7BBRf4/v373d199OjRPmXKFJ8/f76fc845kfXlPqaFKer3\n+oEHHoj8vi5fvtwbNmzomZmZ/uCDD/odd9zh7u4bN2700047zd096vc87777rl9zzTWek5Pj2dnZ\nfv755/vHH38cOVbt3r3bMzIy/NRTTy32ON6zZ0+/+uqr3d39448/jhzPiqqj4DEvNTXVZ82a5e7u\nY8aM8Ztuuimy3tw8u4eOSbNnz3Z393Xr1nmLFi2KrKmo41/ebRf1+e7tt9/2Ll26+O7du939l/zn\nvl9xDz3vEydOdHf3Rx99NPI+5IYbbvC7777b3d3feecdl1Tk+5fc9eRenzcz77//vl988cXu7gc9\nbx999JEnJyf7xo0bfe/evV6vXr3I78HDDz8cefwKivVxsyJGNG2Q1DDP5QbhZYE2ceLEyF/kfvjh\nB61Zs0ZNmzbV559/rvT0dK1YsULdunXTnDlzdOGFFyopKUk1atTQgAEDolp/YmKi+vXrp+nTpysr\nK0tvvfWWLrzwwnLdp3nz5unss89W3bp1lZiYqBEjRuiTTz4p9j5ZWVkaPny4fvvb36pp06ZF3u7D\nDz/U6NGjJUkJCQlKTk7Wp59+qkGDBunYY49V9erVdfHFF0c68cW5+OKLJUnt27cv9i8jhbnwwgtV\ntWpVHX/88erVq1exI4bMTJdddpmef/55bd++XZ999pn69+8f1XYOHDiga665RqmpqRo8eHC+0zI6\ndeqkJk2aRC43adJEqampqlSpklq1aqXevXvLzJSamlrq/YtnL7/8sn7961/ryiuv1E8//aSNGzeq\nfv36+vrrr8lUIY62TL333nt67rnn1LZtW5155plKT0/XypUrJR2cqUOxcuVK3XrrrZo2bZoqV66s\n9957T/fcc4/atm2rs88+W3v37o2MsujTp49q165dpu0dDThOhpDpXxxzzDGRkVF5a/vss8/061//\nWpJ02WWX6dNPP43cZ8CAAZFj4oknnpjveLl27Vp9/vnnWrZsmbp166a2bdtqypQpWrduXan2GcFj\nZqpZs6YyMjKUlpamRYsWqVKlSqpSpYratGmjBQsWaPbs2erevXvkPnPmzFH//v1VpUqVQl9LSsrF\nnj179MUXX+iBBx5Qu3btNHLkSGVmZur777/XJ598ot/85jeSpNatW6t169aSQn+gX716tU444QRV\nqVIlsq5p06YpLS1N7dq109KlS7Vq1Sodf/zx6tevnz788EOZmd59911ddNFF+uabb9S1a1clJSWp\ndu3aGjJkiMxMtWvXjozOMzMlJydLkipXrhwZrdS7d28988wzWrp0qV544QX16dNH2dnZqly5cuRU\nvq1bt+r444s+AaRq1arKzMxUwVF0NWvWVGJiaIBQjRo1tGvXLi1cuFD16tVTdna2li5dqv79+0dG\ndeStseAIr1tvvVU9evTI93wVlJGRocGDByslJUX33XdflW+//TZJkv7rv/7r5+nTp9eSpOeee67W\ngAEDfpakuXPnVr/88su3SdKll166o2bNmtlFrlxS/fr193Xt2jVTktq1a7dn7dq1VYq7vSR17dp1\nZ61atXLq1auXVb169ezBgwdvlxST9+gffPCBFixYoI4dO6pt27b64IMPtHr1ajVt2lSrV6/Wf//3\nf2vGjBmqWbNmsesp7Pf6008/jfy+tmjRQo0bN9a3336rIUOGREbYTJs2LTKHZbTved577z299957\nateundLS0rRixQqtXLlSs2fP1qBBg1StWjXVrFlTAwcOLHH/hw8fLknq0aOHduzYoe3btxdbR66M\njAxt375dPXv2lCRdfvnl+Y7DQ4cOjfx/5syZuvHGG9W2bVsNHDhQO3bsKHbEa0nHv6I+382cOVMj\nR45UtWrVJKnI94hFPVfDhg2TJPXr10+1atUq/oEr8FjkZuaWW27JN1qt4HvVjh076uSTT1aVKlV0\n6qmnqm/fvpJi87scrUKHG5azeZKam1kThRpMwxSalymwZs2apZkzZ+qzzz5TtWrVIkEYNmyYpk2b\nphYtWmjQoEFlnjR12LBh+tvf/qbatWurQ4cOqlGjRon3qV+/vn744ZczEdevX6/69euXqY7ijBo1\nSs2bN9fNN98cs3UmJiYqJ+eXMyVzh+Tmyj2QJyQklPq804LPiZkVu72RI0dqwIABSkpK0uDBgyMH\n3JI89NBDOvHEE7Vo0SLl5OQoKSky4lfHHntsofsjKfImKvf/QTqv9lCtXr26cXZ2scd+zZo1S3Pn\nztUzzzyjpKQkXXvttdq/f7/69u2rmTNn6sCBA2SqDI6ETLm7HnnkEZ177rn5ls+aNeugTJXWrl27\nNGTIEE2aNEknn3xyZHv//Oc/dfrpp+e77RdffFHm7R0NOE7+gkz/onLlypH1R1tb3mNiweNlVlaW\nEhIS1KdPH7344ovR7WDAmWDGfwUAACAASURBVNkASQOaNWtW0aVUuNq1a2vz5s1KSEhQo0aNNHXq\nVHXt2lXJycmaNWuWVq1apZYtW+a7T0JCQr4GR27TRYo+F7mv/Vu2bNHevXvVsGHDIm+7bt06JSUl\n6cQTT4wsW7NmjR544AHNmzdPtWrV0hVXXKF9+/bJzDRs2DBNnDhRmZmZ+V6zQgMFilbURO19+/bV\n2LFjNXr0aFWtWjXyAd/MlJCQoB07dmjPnj35mtz169fPd1peVlaWmjRpov3792vZsmXFziXk7kpM\nTFSrVq0khebOyX2PW7DG3H2aMGGCtm7dqsmTJxe7j2PGjFGvXr30+uuva8aMGXuvuuqqBElq0qTJ\ngeOOOy7riy++qPraa6/Vfvzxxw+pk3zMMcdEHuSEhATPzMysJEmJiYme+z51z549VtR9zKzS1q1b\n6yclJcXkPbq76/LLL9df/vKXg65btGiR3n33XT3++OOaNm2annnmmSLXU5rX+/r166tOnTpavHix\nXn75ZT3++OORWqJ5z+Puuv3223Xttdfmu13uad2lUdixpqg6StMIyVtvTk6OPv/883yfw0pbU17F\nfb6LRlmOzYXJm5m1a9fq7LPPjlwXxM+b5TqiycxelPSZpNPNbL2ZXeXuWZJulPSupOWSprn70uLW\nU9EyMjJUq1YtVatWTStWrNDnn38uSRo0aJD+9a9/6cUXX4x0Jrt166bp06dr79692rVrl/79739H\nvZ2ePXvqyy+/1KRJkyLrK0nHjh21cuVKrVmzRvv379dLL71UbFe5Ro0a2rlzp6TQqICPP/5YW7du\nVXZ2tl588cVIt7gwf/zjH5WRkRHVi0vv3r3197//XVLooJ+RkaHu3bvrjTfe0J49e7R79269/vrr\n6t69u0488URt3rxZ6enp2rdvX1SPWd79KM6//vUv7d27V+np6Zo1a5Y6duyoxo0ba9myZdq3b5+2\nb9+uDz74IHL7evXqqV69eho/frxGjhxZ4vpzZWRk6OSTT1alSpU0depUldRoOZI1bdp0XUJCQrG3\nycjIUI0aNZSUlKS1a9dqyZIlkkLnWn/88cdkqhBHW6bOPfdc/f3vf4/MMfHtt99q9+7dh1x3Xlde\neaVGjhyZ7y+t5557rh555JHIG+WvvvqqVOs82nGcDCHT0enatateeuklSdILL7xQ7KiHgjp37qw5\nc+Zo1apVkkJzfHz77beHVEcQuPt0dx+VOzLkaFajRg3t2bNHW7duVffu3fXAAw+oR48eSktL06RJ\nk9SuXbt8HwS7deumd999Vzt27FB6err+/e9/a8+ePZGJwovaxo4dOySFRuGceeaZmjBhgnJycrRt\n2zatWbNGUmjUxT/+8Q9J0pIlS7R48WJt3rxZWVlZBzWiduzYoWOPPVbJycn66aef8k023rNnT331\n1Vf65z//GXnNat26tf7zn/9o3759+vnnn/Xqq6/K3bVt27YSm+etWrVSTk6O/vznP2vo0KH5vrig\nVq1aWrNmjWrVqpXvcTr55JNVs2ZNff7553J3TZ48WZdeeqnq16+vxMTESKNux44dysrKUvXq1fXT\nTz+pevXqateunb7//nstX75ckjRlyhR169atyPqeeuopzZ49W0888YQqVSr+Y2ZGRkak6f/GG2/k\n61hfcskl2+6+++6Tdu7cmXDmmWdmSlLHjh13TZ06tbYkvfbaazV37NhR/JvNIjRs2HDf3Llzj5Wk\nF154ocjhJGaW06BBg/UlvaeVQr9LJX2JRO/evfXqq69q8+bQF6xv27ZN69at09atW5WTk6NLLrlE\n48eP15dfflmq/ZGk7t27RyaL/vbbb/X9999HmjdDhw7Vfffdp4yMjMjIvGjf85x77rl65plnIqOC\nNmzYoM2bN6tHjx564403lJmZqZ07d0b1TY65cwV++umnSk5OVnJyclR1JCcnq1atWpHRvVOnTi3y\nONy3b1898sgjkcsLFy4stqbCjn95FfX5rk+fPnr22Wcjz3lJ35yZV7du3TRt2jRJoRFjufNNRSNv\nZkpq5AZBuY5ocvfhRSx/W9IhfxWKuy+QpGXLlrUvaUb/4r5KsUOHDlFtr1+/fnr88cfVsmVLnX76\n6ercubOk0At6y5YttWzZMnXq1ElS6A3twIED1bp168iQ72jfPCQkJOiCCy7Q5MmTNWXKlKjuk5iY\nqL/97W8699xzlZ2drSuvvDLyV4fCjBo1Sv369VO9evX00Ucf6Z577lGvXr3k7jr//POLPA1h/fr1\nuuuuu9SiRQulpaVJCk0OmjtBY0ETJkzQqFGj9PTTTyshIUF///vf1aVLF11xxRWRx+rqq69Wu3bt\nJIUmc+zUqZPq16+vFi1alLjfvXr1igy1vP322/MNm8yrdevW6tWrl7Zu3aoxY8aoXr16kqQhQ4Yo\nJSVFTZo0idSQa8SIEdqyZctBfzUrzvXXX69LLrlEzz33nPr16xdXIyBy83Q49evXT/fee68GDx6s\nxo0bRya5rVmzppo0aaJ169aRqQKOtkxdffXVWrt2rdLS0uTuqlu3rt54442DblenTh1169ZNKSkp\n6t+/v2644YZi17tu3Tq9+uqr+vbbbyN/MXzqqac0ZswY3XzzzWrdurVycnLUpEmTUjVAgqS4TJf1\nuFkUjpNkujQeeeQRjRw5Uvfff7/q1q2rZ599Nur71q1bV5MnT9bw4cO1b98+SdL48eN12mmnHVIt\n8aik0TCxlp2drVWrVmn//v1KSkpSdna26tWrpxo1amjlypXau3evUlNTI7ffuHGj0tPTVblyZSUm\nJio5OVl169YtcTtmpuOOO05bt25V79699eCDD6pLly767rvvVKVKlYMakrmvJcOGDVPNmjXVqFEj\nnXTSSapatWqR2+jXr5+eeuoptWzZUuPGjdO4ceP0u9/9Ti1atJCZqXnz5urRo4dGjx6tkSNHqmXL\nlmrZsqXS0tK0detWNWrUKHL6zAknnKC6deuqTZs2ateunVq0aKGGDRvma8QkJCTovPPO05QpU/T6\n669Lkk466STdcsstOuuss1SzZk01aNBABw4c0LHHHltsk0ySGjZsqP79++uee+7RjBkztGXLFjVu\n3FiSVL16dWVnZ6tOnToH3e+xxx7TFVdcoczMTHXt2lWNGjXS0qVLVaNGDVWtWlV79uzRscceq+++\n+06/+tWvNH78eE2YMEGfffaZHnvsMV188cXKzs5WSkpKvon5C7ruuuvUqFEj9enTR1LodeTOO+8s\n9Lb/93//p8svv1zjx49X+/bt8133m9/85ucxY8Y0uummmyJf5XbPPfdsvPTSS5s2b968Tvv27Xcd\nf/zxB4477rhS/2X3tttu+2no0KFNJ0+eXLdPnz7bS3v/wgwYMEB/+ctfVKVKlSJHI51xxhkaP368\n+vbtq5ycHFWuXFmPPvqoqlatqpEjR0ZGkRY24qkk119/vUaPHq3U1FQlJiZq8uTJkREsl156qW66\n6SaNGTMmcvto3/P07dtXy5cvV5cuXSSFfseef/55paWlaejQoWrTpo1OOOGEgxo0hUlKSlK7du10\n4MCByGMUbR1TpkzRddddFxmtV9QxY+LEibrhhhvUunVrZWVlqUePHpFRXIUp7PiXdzRVUZ/v+vXr\np4ULF6pDhw465phjdN555+nuu+8u8TGQpLFjx2r48OGaOnWqunTpopNOOimq0dlS/sycf/75Ud2n\nItnhPlgdikWLFq1t06ZNZDr29PT05IyMjON27959fN4DW2Fi0WgqrV27dql69eras2ePevTooSef\nfDLyphPBd+ONN6pdu3a66qqrKrqUiOXLlx/0ht7MFrh7qX+JC+Yplsorm2QqvgUxU7ESy2weqmgy\nHbTjJpmOb/GQ6SBkMxp5Tp27JnceuoIK25fyVNbtZWdnKyEhQdnZ2frmm2/UuHHjcvsDXLy+luTW\nnZWVpUGDBunKK68s8RscS7J792798MMPUTWiC9q6dav27NmjRo0alamGaGRmZh7UDFyyZMmelJSU\n5SXczxITE71y5cqaOXPmsTfeeGPjFStWLCvuPmUR7XGzIj5rouzGjRun6tWr63//938P63b37dun\nhIQEJSYm6rPPPtPo0aNLHHl1uMT6uFkRczSVWZ06dTLq1KmTsWzZsqJnuqtAo0aN0rJly7R3715d\nfvnlcXHAQ0j79u117LHH6q9//WtFlxKXyiubZCp+kalgCNpxk0zHLzIdW+4+XdL0Dh06XFPRtcTK\nunXrlJmZKXdXnTp1ynWUd7y+lowbN04zZ87U3r171bdvX1100UVlWt+PP/6oLVu2lPmLMoJs1apV\nxwwZMuTU8Gggf+KJJ9aW5/aCdtzEkeH777/XkCFDlJOTo2OOOUaTJk2q6JLKTVw2moIu95zuvG64\n4QbNmTMn37Kbbrop6vkN0tPT1bt374OWf/DBB4UOkR00aFDkPPNc995770ET6xbmzDPPjAxHzzV1\n6lQV1s2/66679Morr+RbNnjwYP3hD38ocTux8uyzz2rChAn5lnXr1k2PPvpoqde1YMHBZ5yU5vFA\n+SBTZApHFjJNpnHkKuzbFtetW3fQtz+deOKJxX47Wl5ZWVn65ptvDlr+3HPPFToh/apVqw76nWzQ\noEFUp+kuX74832T4Uugbg3PndMq73gMHDhx06mbt2rUjXzRRlAceeOCgZWV5rTj55JN18skn56vv\n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\nKubQw36yCauZ5KCptfZ4a+3IgQMHNl0KsEQ2YZxkE8ZJNmGcZBNWM8lBEwAAAADjY9AEAAAAwCAM\nmgAAAAAYhEETAAAAAIMwaAIAAABgEAZNAAAAAAzCoAkAAACAQRg0AQAAADAIgyYAAAAABmHQBAAA\nAMAgDJoAAAAAGIRBEwAAAACDMGgCAAAAYBAGTQAAAAAM4uJNF7Cnqn40yV8leTPJv7TWPr/hkgAA\nAAA4B2v9RFNVPVhVr1XV0X3rh6vqWFXtVNU9ffk3kzzaWvu9JL++zroAAAAAGN66T537TJLDywtV\ndVGS+5LcnORQkjuq6lCSg0le7j/2wzXXBQAAAMDA1jpoaq09neSNfcs3Jtlprb3UWnszycNJbk1y\nPIth09rrAgAAAGB4m7hG01V5+5NLyWLA9OEk9yb5VFX9WpLHT/XkqjqS5Ei/+/2qOnaG3/cTSf7r\nFK91tjVPwSn7nCG9LvzkhSzkTGTzlOzX+TlTn7I5DduyX5Pt6XXO2dyW/8Nkor2e59/H0/Y6pr+5\n51tLf95WZnNM/38DmWQ2z9O29Lq2bFZr7Xyfe3a/oOoDSf6+tfYz/f5tSQ631n633/+tJB9urd29\npt//XGvthnW89phsS5+JXudizr0t25Y+k+3pde59zr2/PdvSZ7I9vc65zzn3tp9e52fOfc65t/30\nOj/r7HMTp6i9kuTqpfsH+xoAAAAAE7aJQdOzSa6rqmuq6tIktyd5bAN1AAAAADCgtQ6aquqhJF9K\n8sGqOl5Vd7XWfpDk7iRPJHkhySOttefXWMYDa3ztMdmWPhO9zsWce1u2LX0m29Pr3Puce397tqXP\nZHt6nXOfc+5tP73Oz5z7nHNv++l1ftbW59qv0QQAAADAdtjEqXMAAAAAzNBsB01VdbiqjlXVTlXd\ns+l6zlZVPVhVr1XV0aW1K6rqyap6sf97eV+vqrq39/iNqrp+6Tl39p9/saruXFr/+ar6Zn/OvbWh\n792sqqur6qmq+reqer6q/qivz7HXd1XVV6rq673XP+3r11TVM72+L/RrlqWqLuv3d/rjH1h6rU/0\n9WNV9dGl9cns9ynVukw2Z9mrbC6ZUq3LZHNevcrliaZW7x7ZnFevsnmiqdWbbE8uey2yuclsttZm\nd0tyUZJvJ7k2yaVJvp7k0KbrOsvafynJ9UmOLq39RZJ7+vE9Sf68H38syT8kqSQ3JXmmr1+R5KX+\n7+X9+PL+2Ff6z1Z/7s0b6vP9Sa7vxz+W5FtJDs2010ry7n58SZJnel2PJLm9r9+f5A/68R8mub8f\n357kC/34UN/LlyW5pu/xi6a036dU60lql8359Sqbb78Xk6n1JLXL5ox6lcsT3o9J1buvdtmcUa+y\necL7Mal6l+reilz2WmRzg9mc6yeabkyy01p7qbX2ZpKHk9y64ZrOSmvt6SRv7Fu+Ncln+/Fnk/zG\n0vrn2sKXk7ynqt6f5KNJnmytvdFa++8kTyY53B/78dbal9tiN31u6bUuqNbaq621r/bj/8niwvBX\nZZ69ttba9/vdS/qtJfnlJI/29f297r0Hjyb5lT4dvzXJw621/22t/XuSnSz2+pT2+5RqfQfZnGWv\nsvm2KdX6DrI5r17l8gRTq/ctsjmvXmXzBFOrN8n25DKRzWw4m3MdNF2V5OWl+8f72lS9r7X2aj/+\njyTv68en6vN068dPsr5R/eN6H8pi+jrLXqvqoqr6WpLXsvjj9O0k322Lb2HcX99bPfXHd5O8N+f+\nHozRlGo9G7Pcr3tk84T6ZHM6Zrlf98w9m3L5DlOr90xmt1+XyaZsbqiWVc1ur+4nmxc+m3MdNM1W\nn5bO5qsCq+rdSf4myR+31r63/Nicem2t/bC19nNJDmYxFf7pDZfEwOa0XxPZZD7mtF+T7cimXG6H\nuezXPbLJHMxlry6Tzc2Y66DplSRXL90/2Nem6j/7R/PS/32tr5+qz9OtHzzJ+kZU1SVZhP7zrbW/\n7cuz7HVPa+27SZ5K8gtZfBzz4v7Qcn1v9dQfP5DkOzn392CMplTr2ZjlfpVN2cy4az0bs9yv25ZN\nuUwyvXrPZJb7VTZlM+Ov93Rmu1dlc3PZnOug6dkk1/UrrV+axUWuHttwTat4LMmd/fjOJH+3tP7x\nWrgpyW7/GOATST5SVZfX4ir6H0nyRH/se1V1Uz8P8+NLr3VB9d//6SQvtNb+cumhOfZ6ZVW9px//\nSJJfzeIc4aeS3NZ/bH+ve+/BbUn+uU/bH0tye/+mgGuSXJfFBeimtN+nVOvZmON+lU3ZHHutZ2OO\n+3UrsimXJ5havWcyq/2ayGZkcyr1ns6s9uoe2dxwNtuGrgK/7lsWV43/VhbnJ35y0/WcQ90PJXk1\nyf9lcf7jXVmcM/lPSV5M8o9Jrug/W0nu6z1+M8kNS6/zO1lcwGsnyW8vrd+Q5Gh/zqeS1Ib6/MUs\nPqb4jSRf67ePzbTXn03yr73Xo0n+pK9f28O7k+Svk1zW19/V7+/0x69deq1P9n6OZelbDaa036dU\n6766ZXN+vcrmO9+PydS6r27ZnFGvcnnS92RS9S7VLZsz6lU2T/qeTKreXvNW5LLXIpsbzGb1JwIA\nAADASuZ66hwAAAAAF5hBEwAAAACDMGgCAAAAYBAGTQAAAAAMwqAJAAAAgEEYNAEAAAAwCIMmAAAA\nAAZh0AQAAADAIP4fZnbVvMmHEuEAAAAASUVORK5CYII=\n","text/plain":["<Figure size 1440x360 with 5 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"oCenb83B2d0u","colab_type":"text"},"source":["## (Still needs to be worked on) Pipeline"]},{"cell_type":"code","metadata":{"id":"yGbZB-YS8m6l","colab_type":"code","colab":{}},"source":["def filter_and_condense(df,verbose_filter=False):\n","  return final_touches(pull_range_features(create_new_base_features(filter_df(df,verbose=verbose_filter))))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"3nCsQ2qp2f8N","colab_type":"code","colab":{}},"source":["from sklearn.manifold import TSNE\n","from sklearn.cluster import KMeans,DBSCAN\n","from sklearn.preprocessing import StandardScaler, RobustScaler, PowerTransformer, Normalizer\n","from sklearn.pipeline import make_pipeline\n","from sklearn.decomposition import PCA\n","\n","pipeline = make_pipeline(RobustScaler(), Normalizer(),PCA(2),KMeans(4))\n","ydf = pd.read_csv('/content/drive/My Drive/Field Day/Research and Writing Projects/2020 Lakeland EDM/jupyter/data/filtered data/Only school day 11-25 pid sessions.csv', index_col='player_id')\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CzHOEfkr_q-U","colab_type":"code","colab":{}},"source":["{}"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"JmqVubMZ_ABg","colab_type":"code","colab":{}},"source":["xdf_filtered_and_condensed = filter_and_condense(df,True)\n","X = xdf_filtered_and_condensed.to_numpy()\n","print(\"-\"*10)\n","ydf_filtered_and_condensed = filter_and_condense(ydf,True)\n","y = ydf_filtered_and_condensed.to_numpy()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"aOg05sq5_dcm","colab_type":"code","colab":{}},"source":["pipeline.fit(X)\n","def add_cluster_features_to_df(pipeline, df, data):\n","  PCA_dims = pipeline[:-1].transform(data)\n","  clustering = pipeline[-1]\n","  labels = clustering.predict(PCA_dims)\n","  distances = []\n","  for a,l in zip(PCA_dims, labels):\n","    b =  clustering.cluster_centers_[l]\n","    distances.append(a-b)\n","  df['label'] = labels\n","  df['PCA1 Offset'] = np.array(distances)[:,0]\n","  df['PCA2 Offset'] = np.array(distances)[:,1]\n","add_cluster_features_to_df(pipeline, xdf_filtered_and_condensed, X)\n","add_cluster_features_to_df(pipeline, ydf_filtered_and_condensed, y)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"57ytOG5g3Uvf","colab_type":"code","colab":{}},"source":["xdf_filtered_and_condensed"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tIWQMMPMCdZk","colab_type":"code","colab":{}},"source":["ydf_filtered_and_condensed"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Sz8QOlpR37Ok","colab_type":"code","colab":{}},"source":["from os import path\n","export_folder = '/content/drive/My Drive/Field Day/Research and Writing Projects/2020 Lakeland EDM/jupyter/data/Clusters'\n","outpath = lambda filename: path.join(export_folder, filename)\n","xdf_filtered_and_condensed.to_csv(outpath('cluster export window 0-2 20200212.csv'))\n","ydf_filtered_and_condensed.to_csv(outpath('CM data cluster export window 0-2 20200212.csv'))"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AKozGbGq4O-c","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"hP9GTmvb4UB2","colab_type":"text"},"source":["Temp"]},{"cell_type":"code","metadata":{"id":"78x3UuP34TxL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"b59fe584-3238-4cc2-d565-54da22415fe9","executionInfo":{"status":"ok","timestamp":1582911589558,"user_tz":360,"elapsed":307,"user":{"displayName":"John Mccloskey","photoUrl":"","userId":"09367906756780102030"}}},"source":["def f(a, *args):\n","    print(f'a: {a}')\n","    for arg in args:\n","        print(f'arg: {arg}')\n","f(1,2,3,4)"],"execution_count":19,"outputs":[{"output_type":"stream","text":["a: 1\n","arg: 2\n","arg: 3\n","arg: 4\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"S_F7m56r4ftj","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}